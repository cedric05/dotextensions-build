name: Release prod Artifacts
on:
  push:
    # branches:
    #   - main
    tags:
      - v*
env:
  dothttpversion: 0.0.40a1
  EXTENSION_VERSION: 0.0.40a1
jobs:
  push-windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10.0"
          architecture: "x64"
      - name: install dothttp-req
        shell: powershell
        run: |
          pip install dothttp_req==${{ env.dothttpversion }} pyinstaller
          Invoke-WebRequest -Uri https://raw.githubusercontent.com/cedric05/dothttp/v${{ env.dothttpversion }}/dothttp/http.tx -OutFile http.tx
          Invoke-WebRequest -Uri https://raw.githubusercontent.com/cedric05/dothttp/v${{ env.dothttpversion }}/dothttp/postScript.js -OutFile postScript.js
          pyinstaller --distpath dist .\cli.py --add-data 'http.tx;.' --add-data 'postScript.js;.'
          Compress-Archive -DestinationPath dotextensions-x86-windows.zip  -Path  dist\cli
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - run: |
          dir
          cd test
          npm install
          npx tsc
          npx cross-env CLI_PATH=..\dist\\cli\\cli.exe npx mocha out\test\*.js 
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: dotextensions-${{ env.EXTENSION_VERSION }}-x86-windows.zip
          file: dotextensions-x86-windows.zip
          tag: v-${{ env.EXTENSION_VERSION }}
          overwrite: true
  pushlinux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Log into registry
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Build image
        run: |
          docker build --tag dotextensions --build-arg VERSION=${{ env.dothttpversion }} .
          docker run --rm --entrypoint cat dotextensions  /app/cli.zip > dothttp-cli.zip
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - run: |
          ls 
          unzip dothttp-cli.zip
          export CLI_PATH=$(realpath cli/cli)
          cd test
          npm install
          npx tsc
          npx mocha out/test/*.js 
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: dotextensions-${{ env.EXTENSION_VERSION }}-linux.zip
          file: dothttp-cli.zip
          tag: v-${{ env.EXTENSION_VERSION }}
          overwrite: true
  push-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10.0"
          architecture: "x64"
      - name: install dothttp
        run: |
          pip install pyinstaller 
          pip install dothttp_req==${{ env.dothttpversion }}
          wget https://raw.githubusercontent.com/cedric05/dothttp/v${{ env.dothttpversion }}/dothttp/http.tx
          wget https://raw.githubusercontent.com/cedric05/dothttp/v${{ env.dothttpversion }}/dothttp/postScript.js
          pyinstaller --distpath dist ./cli.py --add-data 'http.tx:.' --add-data 'postScript.js:.'  \
              && cd dist/ && zip -r ../cli.zip cli/  \
              && cd .. && rm -rf dist build
          cp cli.zip dothttp-cli.zip
      # - name: Use Node.js 14.x
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: 14.x
      # - run: |
      #     ls 
      #     unzip dothttp-cli.zip
      #     export CLI_PATH=$(pwd)/cli/cli
      #     cd test
      #     npm install
      #     npm install typescript@latest
      #     npx tsc
      #     npx mocha out/test/*.js 
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: dotextensions-${{ env.EXTENSION_VERSION }}-darwin.zip
          file: cli.zip
          tag: v-${{ env.EXTENSION_VERSION }}
          overwrite: true
